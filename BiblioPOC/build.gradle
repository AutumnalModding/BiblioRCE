buildscript {
    repositories {
        maven { url "repo.maven.apache.org/maven2" }
        maven { url "https://repo1.maven.org" }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        // classpath 'com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
apply plugin: 'forge'

version = "1.0"
group= "com.exopteron.forgemodnew" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "bibliopoc"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}


repositories {
	jcenter()

}
configurations {
    embed
    compile.extendsFrom(embed)
	shade
	compile.extendsFrom shade
}

dependencies {
    embed "com.esotericsoftware:kryo:5.1.1"

}
jar {
	from sourceSets.main.output


    // embed libraries in jar
    from configurations.embed.collect {
        exclude '**/LICENSE', '**/LICENSE.txt'
        it.isDirectory() ? it : zipTree(it)
    }

	configurations.shade.copyRecursive().setTransitive(false).each { artifact ->
		from (zipTree(artifact))
	}

    manifest.attributes(
            'FMLCorePluginContainsFMLMod': 'true',
            "FMLAT": "test_at.cfg"
    )

}

sourceCompatibility = 1.8
targetCompatibility = 1.8
processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
